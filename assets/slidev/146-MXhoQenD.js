import{_ as b}from"./VClicks-CqG1iedK.js";import{I as g}from"../default-BZFGXOqd.js";import{b as x,c8 as u}from"../index-BPoptjxD.js";import{p as c,u as d,f as P}from"./context-BRLgj0Z2.js";import{b as v,o as h,w as p,g as e,e as k,a0 as r,v as y,x as $}from"../modules/vue-4mDv654O.js";import"./index-DXBYSuAd.js";import"../modules/shiki-Cs_zAk09.js";const A={__name:"146",setup(m,{expose:t}){t(),c(u);const{$slidev:s,$nav:o,$clicksContext:a,$clicks:i,$page:n,$renderContext:f,$frontmatter:_}=d(),l={$slidev:s,$nav:o,$clicksContext:a,$clicks:i,$page:n,$renderContext:f,$frontmatter:_,InjectedLayout:g,get frontmatter(){return u},get useSlideContext(){return d},get _provideFrontmatter(){return c},get _frontmatterToProps(){return P}};return Object.defineProperty(l,"__isScriptSetup",{enumerable:!1,value:!0}),l}};function C(m,t,s,o,a,i){const n=b;return h(),v(o.InjectedLayout,y($(o._frontmatterToProps(o.frontmatter,145))),{default:p(()=>[t[1]||(t[1]=e("h2",null,"Robotic Process Automation (RPA)",-1)),t[2]||(t[2]=e("blockquote",null,[e("p",null,[r("Robotic Process Automation (RPA) "),e("strong",null,"is similar to test automation on the technical level"),r(', but the mentality is different on the business and results side. In RPA, it is pretty standard that you are not running on a machine you control entirely, so your robot needs to be "self-sufficient" and isolated. Also, instead of finding and documenting places where robot execution fails or succeeds, '),e("strong",null,"the aim is always to succeed and get the result of the process"),r(".")])],-1)),k(n,null,{default:p(()=>[...t[0]||(t[0]=[e("ul",null,[e("li",null,[e("code",null,"*** Test Cases ***"),r(" => "),e("code",null,"*** Tasks ***")]),e("li",null,[e("a",{href:"https://github.com/robocorp/rpaframework/?tab=readme-ov-file#libraries",target:"_blank",rel:"noopener"},"Librairies RPA (Desktop, Cloud, Scrappingâ€¦)")])],-1)])]),_:1})]),_:1},16)}const L=x(A,[["render",C],["__file","/@slidev/slides/146.md"]]);export{L as default};
